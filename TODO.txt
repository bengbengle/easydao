    
关键概念：
    模块化程序、开关式架构
    通过外部插件定制
    存入治理代币换取投票权
    代币锁定，代币托管，NFT 投票，多代币治理
    无状态程序架构

    激活提案的要求

    线性解锁

    可报销DAO, 任何 DAO 操作都会返还给会员
    L2 和侧链集成
    具有成本效益的空投
    存储证明


攻击方式：
    即时投票： 
        一个实体可以在投票到期前一分钟借入大量治理代币进行投票，然后立即偿还。我们在 Serum DAO 中看到了这种类型的投票， 这是 Solana 上最早的 SPL 治理 DAO 之一
    
    MEV 投票操纵/闪电贷款： 
        串通的验证者可以通过闪贷协议获得支付，以强制执行为期一个区块的贷款，并且由于 Solana 具有已知的插槽领导者顺序，验证者可以确保在其插槽之间没有开采区块
        Jito Labs 等项目已经在开发中，以使这成为可能。

赠款提案：
    付钱让人们在不同的链中维护不同的实现，例如：near、Solana、Polkadot
    改进 DAO 工具
    独立审计师
    漏洞赏金
    L2 集成


附加功能：
    借贷：
        允许成员质押任何 ERC-721 和 ERC-1155 代币， 以换取任何数量的 DAO 内部代币
    
    仪表：
    付款：
    永久锁定：
        发行永久锁定的代币
    保存令牌： 
        发行治理代币
        发行最短期限内质押的治理代币
    
    去中心化众筹
    空投
    

流程：

    治理程序是处理投票和提案 -->  通过的提案发送到智能钱包 ---> 智能钱包执行通过的提案



protocol：
    smart_wallet, 
    govern 
    electorate program (locked_voter)

    Permalock: 
        创建永久锁, 投票托管， 始终锁定在最长期限
        1. 将代币转移到 Permalock 的pending_tokens账户。该pending_tokens账户持有所有准备被最大锁定的代币。
        2. permalock::refresh_lock接下来， 使用 Permalock 刷新 。这会刷新 Permalock 的托管以最大限度锁定已存入的代币，并刷新所有现有托管代币的锁定期。

        


特点：
    提高灵活性
    可升级性
    降低合约风险




    
    5.27 会议

    1. 服务对象：
        1) 已发行 nft 的 项目 （ 先考虑已有nft 的项目 ）
        2) 未发行 nft 的项目 ， 创建dao 时 新铸造 NFT
    
    2. 已发行的 nft 创建dao 需要质押才能参与治理  
        
        问题： 
        
        1） 是否可以进行 “怒退”？ 
        2） “怒退” 退的是哪部分资金 ？
        3） “怒退” 销毁的是 质押资质吗 ？

    3.  现在的 attribute 策略 只能用于链下提案， 无法在链上进行 验证， 1 token 1 票 的机制可以用于链上验证 
        解决方案： 有 专门 的 预言机 可以上链（ @丁哥 ）
    
    4. dao 国库的资金来源是什么 ？
    
    5. dao 收益的来源 
        
        国库的资金 用于 nft 借贷 
        问题： 
            1） 借贷的 经济模型是什么样 ？  国库资金 是变化的 ， 引起 质押率变化， 是否和 借贷资金 有冲突？ 




问题：

1.  质押资金， 质押 nft , 当 提案失败时候，会 销毁 nft , 或者 延长质押期， 质押 eth/xdai 等

2.  现在的 attribute 策略 只能用于链下提案， 无法在链上进行 验证， 1 token 1 票 的机制可以用于链上验证

3. 在发布 提案的时候，需要缓存下 attribute 用到的数据
    在投票阶段读取 缓存的数据

4.  NFT 的创建 ，只需要提供个图片， Ticket  有投票权，提案权，收益权， 可以7天无条件退款， 可以怒退获的相应比例资金
    创建是否需要根据不同属性，渲染不一样图片 ？ 链上控制还是连下控制 ？


问题：

1. 质押 nft ,  获取 投票权  
1.  eth   
2.  质押资金， 质押 nft , 当 提案失败时候，会 销毁 nft , 或者 延长质押期， 质押 eth/xdai 等

3.  现在的 attribute 策略 只能用于链下提案， 无法在链上进行 验证
    1 token 1 票 的机制可以用于链上验证


4.  在发布 提案的时候，需要缓存下 attribute 用到的数据
    在投票阶段读取  缓存的数据


5. NFT 的创建， 只需要提供个图片， Ticket  有投票权， 提案权， 收益权
    
    可以 7天 无条件 退款， 可以怒退获的相应比例资金
    创建是否需要根据不同属性，渲染不一样图片 ？ 链上控制还是连下控制 ？


    两个接口
            存储： chainId, nftAddress, blockNumber, account, tokenCount 
            一个 存储数据 接口
                入参  chainId, nftAddress,
            一个 读取数据 接口
                入参 chainId, nftAddress, account, blockNumber
                返回 token count










---------------------------------------------------------------------------- 

dao launch  ---> config ---> ready --> process 

1. 项目方 launch dao 
 
    1) deploy nft contract      nft 合约 √
    2) deploy treasure contract 国库 √
    3) deploy dao contract      治理合约 （√）
    
2. 项目方 configure 

    1）设置 nft 所有权到 DAO contract  
    2）设置 dao 默认的治理参数 

3. 项目方 burn ownership && start dao && auction

    1） 启动 auction 开始拍卖 NFT ，拍卖的 收益  ---> 国库 (eth/xdai) 
    2)  NFT 交易版税的收益                     ---> 国库 (eth/xdai) 
    3） 拍卖中 特定的 NFT 会作为奖励             ---> 国库 (NFT tokens) 

    1，Mint Nft
    2. Ragequit
    3. Voting 

4. 用户 / 投资方 
    
    1) 参与竞拍 ---> 获取 nft 
    2) 质押 deposit nft --->  获取 dnft,  收益权 、 提案权 、 投票权 （×）
    3) 可以 burn nft ---> 获取 相应份额 eth/xdai 
    4) 发起提案  比如大于 （1） dnft 持有者  可以 提议草案  
    5）赞助提案  为提案提供 担保金 比如需要 担保 （3） 个 nft ， 发起提案的投票

        1. 链上投票，投票环节，1 nft 一票   （√）
        2. Offchain ERC712 votes merkleTree  （√）

    6）题案失败，扣除 担保 nft, 燃烧掉 
    7) 执行提案 


5, 提案 外部扩展插件 （ == 以后 ）

    1)  nft --> auction
    2） nft --> opensea
    3)  nft --> benddao 借贷
    4） nft --> 碎片化



发布三阶段：

dao creae  ---> config ---> ready --> process  


Create DAO
    dao factory 合约 ---> creae dao 
    nft factory 合约 ---> creae nft 
    config dao set dao share token --> nft 

    adapter 
        1，Mint Nft
        2. Ragequit
        3. voting

config dao:

题案：
    1. 发布题案
    2. 赞助提案
    3. 处理提案
投票：
    onchain vote
    offchain vote

    web 端 调用 adapter
